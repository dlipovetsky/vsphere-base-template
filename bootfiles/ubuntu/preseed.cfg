choose-mirror-bin mirror/http/proxy string
d-i base-installer/kernel/override-image string linux-server
d-i clock-setup/utc boolean true
d-i clock-setup/utc-auto boolean true
d-i finish-install/reboot_in_progress note
d-i grub-installer/only_debian boolean true
d-i grub-installer/with_other_os boolean true
d-i mirror/country string manual
d-i mirror/http/directory string /ubuntu/
d-i mirror/http/hostname string archive.ubuntu.com
d-i mirror/http/proxy string
d-i passwd/root-login boolean true
d-i passwd/root-password-crypted password !!
d-i passwd/make-user boolean false
d-i partman-auto-lvm/guided_size string max
d-i partman-auto/choose_recipe select atomic
d-i partman-auto/method string lvm
d-i partman-lvm/confirm boolean true
d-i partman-lvm/confirm_nooverwrite boolean true
d-i partman-lvm/device_remove_lvm boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true
d-i partman/confirm_write_new_label boolean true
d-i partman-partitioning/no_bootable_gpt_biosgrub boolean false
d-i partman-partitioning/no_bootable_gpt_efi boolean false
d-i partman-efi/non_efi_system boolean true
d-i passwd/user-fullname string ${local.ssh_username}
d-i passwd/user-uid string 1000
d-i passwd/username string ${local.ssh_username}
d-i passwd/user-password-crypted password password !!
d-i pkgsel/include string openssh-server ntp linux-tools-$(uname -r) linux-cloud-tools-$(uname -r) linux-cloud-tools-common cifs-utils software-properties-common ifupdown
d-i pkgsel/install-language-support boolean false
d-i pkgsel/update-policy select none
d-i pkgsel/upgrade select full-upgrade
d-i time/zone string UTC
d-i user-setup/allow-password-weak boolean true
d-i user-setup/encrypt-home boolean false

### Package selection
d-i tasksel/first multiselect none
d-i pkgsel/include string openssh-server cloud-init open-vm-tools
d-i pkgsel/upgrade select full-upgrade
d-i pkgsel/update-policy select unattended-upgrades

d-i preseed/late_command string \
 mkdir -p --mode=0700 /target/home/${local.ssh_username}/.ssh; \
 echo '${data.sshkey.install.public_key}' >/target/home/${local.ssh_username}/.ssh/authorized_keys; \
 chown -R 1000:1000 /target/home/${local.ssh_username}/.ssh/; \
 chmod 600 /target/home/${local.ssh_username}/.ssh/authorized_keys; \
 echo '${local.ssh_username} ALL=(ALL) NOPASSWD:ALL' > /target/etc/sudoers.d/${local.ssh_username}; \
 chmod 440 /target/etc/sudoers.d/${local.ssh_username}
